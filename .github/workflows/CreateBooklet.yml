name: Generate Booklet PDFs

on:
  workflow_run:
    workflows: ["Compile LaTeX Files"]
    types:
      - completed
  workflow_dispatch: # This will trigger the first job, which then checks for the file

permissions:
  contents: write # Grant write access for committing and pushing

jobs:
  # This job checks for the presence of the inprogress.inprogress file
  check_flag_exists:
    runs-on: ubuntu-latest
    outputs:
      should_run_booklets: ${{ steps.file_check.outputs.exists }} # Output true/false based on file existence
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Check for inprogress.inprogress file in input folder
        id: file_check # Assign an ID to this step to reference its outputs
        run: |
          INPROGRESS_FILE="input/inprogress.inprogress"
          if [ -f "$INPROGRESS_FILE" ]; then
            echo "The file '$INPROGRESS_FILE' is present. Booklet generation will proceed."
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "The file '$INPROGRESS_FILE' is NOT present. Skipping booklet generation."
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi
        shell: bash

  # This job will only run if the 'inprogress.inprogress' file was found by the previous job
  generate-booklets:
    runs-on: ubuntu-latest
    needs: check_flag_exists # This job depends on the 'check_flag_exists' job
    if: needs.check_flag_exists.outputs.should_run_booklets == 'true' # Only run if the flag was true

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install PDF Processing Tools
        run: |
          sudo apt update
          sudo apt install -y texlive-extra-utils

      - name: Process PDF Files
        run: |
          # Ensure output directory exists for processing downloaded artifacts
          mkdir -p output/

          # Loop through files ending with ' - View.pdf' in the downloaded artifacts
          for file in output/* - View.pdf; do
            # Check if the file actually exists and is a regular file
            if [[ -f "$file" ]]; then
              echo "Processing booklet for: $file"
              base_name="${file% - View.pdf}" # Extract base name (e.g., 'Document')
              pdfbook2 "$file" # Creates 'Document - View-book.pdf'
              # Rename it to 'Document - Print.pdf'
              mv "${file%.*}-book.pdf" "${base_name} - Print.pdf"
              echo "Created ${base_name} - Print.pdf"
            else
              echo "Warning: File not found or not a regular file for booklet processing: $file"
            fi
          done

      - name: Auto Commit PDFs (View and Print versions)
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Compiled LaTeX files with View and Print versions"
          push_options: '--force'
          file_pattern: 'output/*.pdf' # Commit all new and modified PDFs in output/

      - name: Upload PDFs (both View and Print)
        uses: actions/upload-artifact@v4
        with:
          name: compiled-and-booklet-pdfs
          path: output/*.pdf

      # --- NEW STEP: Delete the inprogress file from input/ ---
      - name: Delete inprogress file
        id: delete_inprogress # Add an ID to reference outputs
        run: |
          INPROGRESS_FILE="input/inprogress.inprogress" # Corrected path to input/
          if [ -f "$INPROGRESS_FILE" ]; then
            echo "Deleting $INPROGRESS_FILE..."
            rm "$INPROGRESS_FILE"
            echo "::set-output name=file_deleted::true" # Set an output if deleted
            echo "$INPROGRESS_FILE deleted."
          else
            echo "$INPROGRESS_FILE not found, skipping deletion."
            echo "::set-output name=file_deleted::false" # Set an output if not deleted
          fi
        shell: bash # Ensure bash for the set-output command

      - name: Commit inprogress file deletion
        # Only run this step if the file was actually deleted
        if: steps.delete_inprogress.outputs.file_deleted == 'true'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Cleaned up inprogress file"
          commit_options: '--no-verify --allow-empty' # Allows committing even if no other changes
          file_pattern: 'input/inprogress.inprogress' # Specify the exact file to commit its deletion
          push_options: '--force' # Push immediately. Remove if you want to push manually later.
