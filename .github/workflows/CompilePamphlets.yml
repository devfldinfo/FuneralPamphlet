name: Compile LaTeX Files

on:
  push:
    paths:
      - 'input/start.start'
  pull_request:
    paths:
      - 'input/start.start'
  workflow_dispatch:  

permissions:
  contents: write  # Grant write access for committing and pushing

jobs:
  compile:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' || # Always run for manual triggers
      (github.event_name == 'push' &&
        # Checks if 'input/start.start' is among the files added in any commit of this push.
        # This flattens the 'added' arrays from all commits and checks for inclusion.
        fromJSON(toJSON(github.event.commits.*.added)).flat().includes('input/start.start')
      )
      # Note: For 'pull_request' events, the event payload does not directly provide
      # a list of added/removed files in the same way 'push' events do.
      # Checking for 'added' files in a PR would require making a GitHub API call
      # within a separate step, which adds significant complexity.
      # Currently, this 'if' condition will NOT trigger for pull requests when
      # only 'input/start.start' is added via PR unless an API check is implemented.
      # If you need 'pull_request' additions to trigger, please specify.

    

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install LaTeX and PDF Utilities
        run: |
          sudo apt-get update 
          sudo apt-get install -y texlive-latex-base texlive-latex-extra texlive-fonts-recommended texlive-xetex texlive-bibtex-extra biber texlive-extra-utils

      - name: Create Output Directory
        run: mkdir -p output

      - name: Compile LaTeX Files
        run: |
          for file in input/*.txt; do
            base_name=$(basename "$file" .txt)

            # First LaTeX run (to generate .bcf and auxiliary files)
            lualatex -interaction=nonstopmode -output-directory=output "$file"

            # If .bcf file exists, run Biber
            if [ -f "output/$base_name.bcf" ]; then
              biber output/"$base_name"
            fi

            # Second LaTeX run (to process citations and references)
            lualatex -interaction=nonstopmode -output-directory=output "$file"

            # Third LaTeX run (to finalize references)
            lualatex -interaction=nonstopmode -output-directory=output "$file"

            # Rename output PDF
            #mv output/"$base_name.pdf" output/"$base_name - View.pdf"
            done  

    #  - name: Auto Commit PDFs
    #     uses: stefanzweifel/git-auto-commit-action@v4
    #    with:
    #      commit_message: "Compiled LaTeX files with View and Print versions"
    #      push_options: '--force'
    #      file_pattern: 'output/*.pdf'

          

     # - name: Generate Booklet PDFs
     #   run: |
     #     for pdf in output/*- View.pdf; do
     #       base_name=$(basename "$pdf" " - View.pdf")
     #       pdfjam --booklet true --landscape --paper a4paper "$pdf" --outfile "output/${base_name} - Print.pdf"
     #     done  

      - name: Delete Temporary LaTeX Files
        run: rm -f output/*.{aux,log,lof,lot,toc,bbl,blg,out,synctex.gz,fdb_latexmk,fls,bcf,run.xml}

      - name: Auto Commit PDFs
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Compiled LaTeX files"
          push_options: '--force'
          file_pattern: 'output/*.pdf'

      - name: Upload PDFs
        uses: actions/upload-artifact@v4
        with:
          name: compiled-pamphlets
          path: output/*.pdf
