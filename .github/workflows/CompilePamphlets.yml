      - name: Compile LaTeX Files
        run: |
          for file in input/*.txt; do
            original_base_name=$(basename "$file" .txt)
            target_tex_file="output/${original_base_name}.tex" # The .tex file we'll compile
            target_pdf_file="output/${original_base_name}.pdf" # The final PDF name expected

            echo "Processing input file: $file"
            echo "Temporary .tex file for compilation: $target_tex_file"
            echo "Expected output PDF: $target_pdf_file"

            # Step 1: Copy the .txt content to a .tex file in the output directory
            cp "$file" "$target_tex_file"

            # Step 2: Run LuaLaTeX (first pass)
            # Use '//' prefix to tell LuaLaTeX to interpret the path literally,
            # handling special characters like '~' and multiple '.'
            lualatex -interaction=nonstopmode "//${target_tex_file}"

            # Step 3: If .bcf file exists, run Biber
            # Biber also needs the literal path/basename
            if [ -f "output/${original_base_name}.bcf" ]; then
              echo "Running Biber for ${original_base_name}"
              biber "output/${original_base_name}"
            fi

            # Step 4: Second LuaLaTeX run
            lualatex -interaction=nonstopmode "//${target_tex_file}"

            # Step 5: Third LuaLaTeX run
            lualatex -interaction=nonstopmode "//${target_tex_file}"

            # --- Validation and Cleanup for current file ---
            if [ ! -f "$target_pdf_file" ]; then
              echo "::error file=$file::PDF file ($target_pdf_file) was NOT created successfully for input $file."
              exit 1 # Fail the step if PDF is not found
            else
              echo "Successfully created $target_pdf_file"
            fi

            # Clean up the temporary .tex file after compilation for this specific pamphlet
            rm "$target_tex_file"

          done
