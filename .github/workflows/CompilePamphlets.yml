name: Compile LaTeX Files

on:
  push:
    paths:
      - 'input/start.start'
  pull_request:
    paths:
      - 'input/start.start'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  compile:
    runs-on: ubuntu-latest
    # --- TEMPORARILY REMOVE THE 'if' CONDITION FOR DEBUGGING ---
    # We remove this so the job always runs and we can see the debug output.
    # After debugging, we will put it back.
    # if: |
    #   github.event_name == 'workflow_dispatch' ||
    #   (github.event_name == 'push' &&
    #     fromJSON(toJSON(github.event.commits.*.added)).flat().includes('input/start.start') &&
    #     !fromJSON(toJSON(github.event.commits.*.removed)).flat().includes('input/start.start')
    #   )

    steps:
      - name: Debug - Print GitHub Event Payload
        run: |
          echo "GitHub Event Name: ${{ github.event_name }}"
          echo "--- Raw GitHub Event (GITHUB_EVENT_PATH) ---"
          cat "$GITHUB_EVENT_PATH" | jq . # jq is a JSON processor, helpful for readable output
          echo "--- Content of github.event.commits.*.added ---"
          echo "${{ toJSON(github.event.commits.*.added) }}" | jq .
          echo "--- Content of github.event.commits.*.removed ---"
          echo "${{ toJSON(github.event.commits.*.removed) }}" | jq .
          echo "--- Finished debug print ---"
        shell: bash # Ensure bash is used for jq and shell commands

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install LaTeX and PDF Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y texlive-latex-base texlive-latex-extra texlive-fonts-recommended texlive-xetex texlive-bibtex-extra biber texlive-extra-utils

      - name: Create Output Directory
        run: mkdir -p output

      - name: Compile LaTeX Files
        run: |
          for file in input/*.txt; do
            base_name=$(basename "$file" .txt)
            lualatex -interaction=nonstopmode -output-directory=output "$file"
            if [ -f "output/$base_name.bcf" ]; then
              biber output/"$base_name"
            fi
            lualatex -interaction=nonstopmode -output-directory=output "$file"
            lualatex -interaction=nonstopmode -output-directory=output "$file"
          done

      - name: Delete Temporary LaTeX Files
        run: rm -f output/*.{aux,log,lof,lot,toc,bbl,blg,out,synctex.gz,fdb_latexmk,fls,bcf,run.xml}

      - name: Auto Commit PDFs
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Compiled LaTeX files"
          push_options: '--force'
          file_pattern: 'output/*.pdf'

      - name: Upload PDFs
        uses: actions/upload-artifact@v4
        with:
          name: compiled-pamphlets
          path: output/*.pdf
